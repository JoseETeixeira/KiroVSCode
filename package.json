{
  "name": "kiro-copilot-extension",
  "displayName": "Kiro-Style Copilot",
  "description": "A VSCode extension that adds Kiro-style Vibe Coding and Spec modes to GitHub Copilot",
  "version": "0.0.6",
  "publisher": "JosEduardoTeixeira",
  "engines": {
    "vscode": "^1.85.0"
  },
  "repository": {
    "url": "https://github.com/JoseETeixeira/KiroVSCode"
  },
  "categories": [
    "AI",
    "Chat",
    "Programming Languages"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "kiro-copilot.switchToVibeMode",
        "title": "Kiro: Switch to Vibe Coding Mode"
      },
      {
        "command": "kiro-copilot.switchToSpecMode",
        "title": "Kiro: Switch to Spec Mode"
      },
      {
        "command": "kiro-copilot.openModeSelector",
        "title": "Kiro: Select Coding Mode"
      },
      {
        "command": "kiro-copilot.startTaskFromFile",
        "title": "Kiro: Start Task from Current File"
      },
      {
        "command": "kiro-copilot.executeTask",
        "title": "Kiro: Execute Task"
      },
      {
        "command": "kiro-copilot.markTaskComplete",
        "title": "Kiro: Mark Active Task Complete"
      },
      {
        "command": "kiro-copilot.clearActiveTask",
        "title": "Kiro: Clear Active Task Tracking"
      },
      {
        "command": "kiro-copilot.showActiveTask",
        "title": "Kiro: Show Active Task"
      },
      {
        "command": "kiro-copilot.startWorkflow",
        "title": "Kiro: Start Workflow"
      },
      {
        "command": "kiro-copilot.resumeWorkflow",
        "title": "Kiro: Resume Workflow"
      },
      {
        "command": "kiro-copilot.cancelWorkflow",
        "title": "Kiro: Cancel Workflow"
      },
      {
        "command": "kiro-copilot.showWorkflowStatus",
        "title": "Kiro: Show Workflow Status"
      },
      {
        "command": "kiro-copilot.openSpecDocument",
        "title": "Kiro: Open Spec Document"
      },
      {
        "command": "kiro-copilot.openSteeringFile",
        "title": "Kiro: Open Steering File"
      },
      {
        "command": "kiro-copilot.refreshSpecExplorer",
        "title": "Kiro: Refresh Spec Explorer"
      },
      {
        "command": "kiro-copilot.refineRequirements",
        "title": "Kiro: Refine Requirements"
      },
      {
        "command": "kiro-copilot.updateDesign",
        "title": "Kiro: Update Design"
      },
      {
        "command": "kiro-copilot.manageTasks",
        "title": "Kiro: Manage Tasks"
      },
      {
        "command": "kiro-copilot.createRequirements",
        "title": "Kiro: Create Requirements"
      },
      {
        "command": "kiro-copilot.createDesign",
        "title": "Kiro: Create Design"
      },
      {
        "command": "kiro-copilot.createTasks",
        "title": "Kiro: Create Tasks"
      },
      {
        "command": "kiro-copilot.deleteSpec",
        "title": "Kiro: Delete Spec"
      },
      {
        "command": "kiro-copilot.navigateToStage",
        "title": "Kiro: Navigate to Stage"
      },
      {
        "command": "kiro-copilot.updateStage",
        "title": "Kiro: Update Stage"
      },
      {
        "command": "kiro-copilot.viewChatSessions",
        "title": "Kiro: View Chat Sessions"
      },
      {
        "command": "kiro-copilot.cleanupSessions",
        "title": "Kiro: Cleanup Old Chat Sessions"
      },
      {
        "command": "kiro-copilot.completeCurrentSession",
        "title": "Kiro: Complete Current Chat Session"
      }
    ],
    "configuration": {
      "title": "Kiro Copilot",
      "properties": {
        "kiroCopilot.mode": {
          "type": "string",
          "default": "vibe",
          "enum": [
            "vibe",
            "spec"
          ],
          "enumDescriptions": [
            "Vibe Coding - Chat first, then build. Explore ideas and iterate as you discover needs.",
            "Spec - Plan first, then build. Create requirements and design before coding starts."
          ],
          "description": "Current coding mode",
          "scope": "window"
        },
        "kiroCopilot.promptsPath": {
          "type": "string",
          "default": "",
          "description": "Custom path to prompts directory. Leave empty to use default locations (extension prompts → user prompts → workspace .kiro/prompts)",
          "scope": "resource"
        },
        "kiroCopilot.autoDetectTasks": {
          "type": "boolean",
          "default": true,
          "description": "Automatically scan workspace for tasks.md files and show them in Task Context view",
          "scope": "window"
        },
        "kiroCopilot.specsDirectory": {
          "type": "string",
          "default": ".kiro/specs",
          "description": "Directory where spec folders are stored (relative to workspace root)",
          "scope": "resource"
        },
        "kiroCopilot.steeringDirectory": {
          "type": "string",
          "default": ".kiro/steering",
          "description": "Directory where steering files are stored (relative to workspace root)",
          "scope": "resource"
        },
        "kiroCopilot.taskScanDepth": {
          "type": "number",
          "default": 10,
          "minimum": 1,
          "maximum": 20,
          "description": "Maximum directory depth to scan for tasks.md files",
          "scope": "window"
        },
        "kiroCopilot.enableLogging": {
          "type": "boolean",
          "default": false,
          "description": "Enable detailed logging to the Output panel for debugging",
          "scope": "window"
        },
        "kiroCopilot.taskStatusIcons": {
          "type": "object",
          "default": {
            "pending": "circle-outline",
            "completed": "check",
            "failed": "error"
          },
          "description": "VS Code icon IDs for different task statuses",
          "properties": {
            "pending": {
              "type": "string",
              "description": "Icon for pending tasks"
            },
            "completed": {
              "type": "string",
              "description": "Icon for completed tasks"
            },
            "failed": {
              "type": "string",
              "description": "Icon for failed tasks"
            }
          },
          "scope": "window"
        },
        "kiroCopilot.defaultLanguageModel": {
          "type": "string",
          "default": "copilot-gpt-5",
          "enum": [
            "copilot-gpt-5",
            "copilot-gpt-3.5-turbo"
          ],
          "enumDescriptions": [
            "GPT-5 - Most capable model for complex tasks",
            "GPT-3.5 Turbo - Faster, good for simple tasks"
          ],
          "description": "Preferred language model for @kiro chat participant",
          "scope": "window"
        },
        "kiroCopilot.showModeInStatusBar": {
          "type": "boolean",
          "default": true,
          "description": "Show current coding mode in the status bar",
          "scope": "window"
        },
        "kiroCopilot.autoRefreshTaskContext": {
          "type": "boolean",
          "default": true,
          "description": "Automatically refresh Task Context view when tasks.md files change",
          "scope": "window"
        },
        "kiroCopilot.excludePatterns": {
          "type": "array",
          "default": [
            "**/node_modules/**",
            "**/dist/**",
            "**/out/**",
            "**/.git/**",
            "**/vendor/**"
          ],
          "description": "Glob patterns to exclude when scanning for tasks.md files",
          "items": {
            "type": "string"
          },
          "scope": "resource"
        }
      }
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "kiro-copilot",
          "title": "Kiro Assistant",
          "icon": "resources/kiro-icon.svg"
        }
      ]
    },
    "views": {
      "kiro-copilot": [
        {
          "id": "kiro-copilot.chatPanel",
          "name": "Chat",
          "type": "webview",
          "icon": "$(comment-discussion)"
        },
        {
          "id": "kiro-copilot.modeSelector",
          "name": "Coding Mode",
          "icon": "$(rocket)"
        },
        {
          "id": "kiro-copilot.specExplorer",
          "name": "Spec Explorer",
          "icon": "$(folder-library)"
        },
        {
          "id": "kiro-copilot.taskContext",
          "name": "Task Context",
          "icon": "$(checklist)"
        }
      ]
    },
    "menus": {
      "view/item/context": [
        {
          "command": "kiro-copilot.refineRequirements",
          "when": "view == kiro-copilot.specExplorer && viewItem == spec",
          "group": "1_spec@1"
        },
        {
          "command": "kiro-copilot.updateDesign",
          "when": "view == kiro-copilot.specExplorer && viewItem == spec",
          "group": "1_spec@2"
        },
        {
          "command": "kiro-copilot.manageTasks",
          "when": "view == kiro-copilot.specExplorer && viewItem == spec",
          "group": "1_spec@3"
        },
        {
          "command": "kiro-copilot.deleteSpec",
          "when": "view == kiro-copilot.specExplorer && viewItem == spec",
          "group": "2_danger@1"
        },
        {
          "command": "kiro-copilot.createRequirements",
          "when": "view == kiro-copilot.specExplorer && viewItem == document-requirements-missing",
          "group": "inline"
        },
        {
          "command": "kiro-copilot.createDesign",
          "when": "view == kiro-copilot.specExplorer && viewItem == document-design-missing",
          "group": "inline"
        },
        {
          "command": "kiro-copilot.createTasks",
          "when": "view == kiro-copilot.specExplorer && viewItem == document-tasks-missing",
          "group": "inline"
        }
      ]
    },
    "chatParticipants": [
      {
        "id": "kiro-copilot.assistant",
        "name": "kiro",
        "description": "Kiro-style AI assistant with Vibe and Spec modes",
        "isSticky": true,
        "commands": [
          {
            "name": "vibe",
            "description": "Switch to Vibe Coding mode - rapid exploration and testing"
          },
          {
            "name": "spec",
            "description": "Switch to Spec mode - plan requirements and design first"
          },
          {
            "name": "task",
            "description": "Start working on a task from tasks.md"
          }
        ]
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./ && tsc -p ./src/webview && node -e \"require('fs').cpSync('src/webview/chatPanel.css', 'out/webview/chatPanel.css')\"",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/markdown-it": "^14.1.2",
    "@types/node": "^20.x",
    "@types/vscode": "^1.85.0",
    "@typescript-eslint/eslint-plugin": "^6.15.0",
    "@typescript-eslint/parser": "^6.15.0",
    "eslint": "^8.56.0",
    "typescript": "^5.3.3"
  },
  "dependencies": {
    "markdown-it": "^14.0.0"
  }
}
